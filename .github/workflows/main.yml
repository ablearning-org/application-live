name: CI Pipeline with Flux

on:
  push:
    branches:
      - main  # or any other branch you use

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js (if your project is a Node.js project)
      uses: actions/setup-node@v2
      with:
        node-version: '14'  # Specify your Node.js version

    # If your project uses another stack, set it up accordingly

    - name: Install dependencies
      run: npm install  # or the appropriate command for your project

    - name: Run lint
      run: npm run lint  # Replace with your lint command

  # This step is optional - only if you want to trigger Flux reconciliation manually
  # trigger-flux-reconciliation:
  #   runs-on: ubuntu-latest
  #   needs: lint  # Ensure this job runs after the lint job
  #   if: github.ref == 'refs/heads/main'  # Only trigger on main branch

  #   steps:
  #   - name: Trigger Flux reconciliation
  #     run: |
  #       curl -X POST ${{ secrets.FLUX_WEBHOOK_URL }}





# name: Deploy to GKE

# on:
#   push:
#     branches:
#       - main  # or your default branch

# jobs:
#   deploy:
#     permissions:
#       id-token: write
#       contents: read

#     runs-on: ubuntu-latest
#     container:
#       image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
#       options: --entrypoint /bin/bash
      
#     steps:
#     - uses: actions/checkout@v2

#     - id: 'auth'
#       name: 'Authenticate to Google Cloud'
#       uses: 'google-github-actions/auth@v1'
#       with:
#         create_credentials_file: true
#         workload_identity_provider: 'projects/573325332123/locations/global/workloadIdentityPools/github-application-live/providers/github-application-live'
#         service_account: 'geolocview-serviceaccount@third-nature-400716.iam.gserviceaccount.com'

    
    # - name: Deploy to GKE
    #   run: |
    #     gcloud container clusters get-credentials geolocview-cluster-1 --zone us-east1 --project third-nature-400716

    # - name: Deploy Backend to GKE
    #   run: |
    #     kubectl apply -f backend/backend-deployment.yaml

    # - name: Deploy Frontend to GKE
    #   run: |
    #     kubectl apply -f frontend/geolocview/frontend-deployment.yaml


    # - name: Deploy Frontend Service to GKE
    #   run: |
    #     kubectl apply -f frontend/geolocview/frontend-service.yaml


    # - name: Deploy Frontend ingress to GKE
    #   run: |
    #     kubectl apply -f frontend/geolocview/ingress.yaml

    


    
